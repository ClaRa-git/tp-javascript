----- TP JAVASCRIPT: GESTION DE STOCK -----

Rendre la page fonctionnelle en JS.

Fonctionnalités:
- Ajout de nouveau produit. <-- OK
- Suppression de produits existants. <-- OK
- Modification (+/-) du stock de produits existants. <-- OK
- Coloration de la cellule de stock: orange si < 10 (class .table-warning), rouge si = 0 (class .table-danger). <-- OK
- Sauvegarde des produits dans localStorage (enregistrement permanent). <-- OK
- Lorsque l'on supprime tous les produits le message d'alerte s'affiche. <-- OK

Données d'exemple fournies dans le JS.

/!\ Lisez-bien les commentaires dans le HTML.

Bon développement !

Fonctions supplémentaires possibles :
 - Masquer le tableau / les fonctionnalités s'il n'y a aucun produit en stock
 - Créer la popup d'alerte (ne pas se servir de celle du système)
 - Trier le tableau (nom / prix / quantité) (b) <-- OK
 - Vérifier si l'élément existe déjà (a) <-- OK
 - Changer la quantité des produits déjà présents dans le stock
 - Bouton de mise à 0 des stocks (individuels / général)
 - Recherche (c) <-- OK


 (a)
 -> Création d'une fonction majuscule pour ne pas être gêner par la casse (permet de mettre en maj des données déjà existantes)
        => Inutile - il suffit d'utiliser toUpperCase() au moment de la comparaison
 -> Comparaison au moment de créer un nouvel élément -> Si ok, on le rentre dans le tableau, sinon on arrête

 (b)
 -> https://www.trucsweb.com/tutoriels/javascript/tableau-tri/
 -> Création d'une ligne dans le tableau pour le tri ? (ou utilisation de la ligne de th existante)
 -> Utilisation de la méthode monTableau.sort() pour le nom et monTableau.sort((a, b) => a - b); pour les nombres.

 (c)
 -> Mettre en place un input + un bouton
 -> Récupérer la valeur de l'input (Attention à la casse)
 -> Comparer chaque nom de produit à l'input
 -> Afficher le résultat (nouvel affichage ou dans le tableau ?)